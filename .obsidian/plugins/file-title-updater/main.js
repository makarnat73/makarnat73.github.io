/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var I=Object.create;var w=Object.defineProperty;var D=Object.getOwnPropertyDescriptor;var v=Object.getOwnPropertyNames;var L=Object.getPrototypeOf,P=Object.prototype.hasOwnProperty;var C=r=>w(r,"__esModule",{value:!0});var x=(r,t)=>{C(r);for(var e in t)w(r,e,{get:t[e],enumerable:!0})},z=(r,t,e)=>{if(t&&typeof t=="object"||typeof t=="function")for(let n of v(t))!P.call(r,n)&&n!=="default"&&w(r,n,{get:()=>t[n],enumerable:!(e=D(t,n))||e.enumerable});return r},N=r=>z(C(w(r!=null?I(L(r)):{},"default",r&&r.__esModule&&"default"in r?{get:()=>r.default,enumerable:!0}:{value:r,enumerable:!0})),r);x(exports,{default:()=>R});var o=N(require("obsidian"));var T=N(require("obsidian"));var h;(function(n){n.FILENAME="filename",n.FRONTMATTER="frontmatter",n.HEADING="heading"})(h||(h={}));var d;(function(a){a.REMOVE="remove",a.REPLACE_WITH_SPACE="replace_with_space",a.REPLACE_WITH_DASH="replace_with_dash",a.REPLACE_WITH_UNDERSCORE="replace_with_underscore",a.CUSTOM="custom"})(d||(d={}));var l;(function(s){s.ALL="all",s.FILENAME_FRONTMATTER="filename_frontmatter",s.FILENAME_HEADING="filename_heading",s.FRONTMATTER_HEADING="frontmatter_heading"})(l||(l={}));var H={defaultTitleSource:h.FILENAME,illegalCharHandling:d.REMOVE,customReplacement:"",updateOtherTitlesWithSanitizedVersion:!1,syncMode:l.ALL};var M=class extends T.PluginSettingTab{constructor(t,e){super(t,e);this.plugin=e}display(){let{containerEl:t}=this;t.empty(),new T.Setting(t).setName("Default title source").setDesc("Choose which source to use by default when synchronizing titles").addDropdown(n=>n.addOption(h.FILENAME,"Filename").addOption(h.FRONTMATTER,"Frontmatter title").addOption(h.HEADING,"First heading").setValue(this.plugin.settings.defaultTitleSource).onChange(async s=>{this.plugin.settings.defaultTitleSource=s,await this.plugin.saveSettings()})),new T.Setting(t).setName("Sync mode").setDesc("Choose which title locations to sync (which of the three title places to update)").addDropdown(n=>n.addOption(l.ALL,"All (Filename + Frontmatter + Heading)").addOption(l.FILENAME_FRONTMATTER,"Filename + Frontmatter").addOption(l.FILENAME_HEADING,"Filename + Heading").addOption(l.FRONTMATTER_HEADING,"Frontmatter + Heading").setValue(this.plugin.settings.syncMode).onChange(async s=>{this.plugin.settings.syncMode=s,await this.plugin.saveSettings()})),new T.Setting(t).setName("Illegal character handling").setHeading(),new T.Setting(t).setName("Illegal character handling").setDesc("Choose how to handle illegal characters when updating filenames").addDropdown(n=>n.addOption(d.REMOVE,"Remove illegal characters").addOption(d.REPLACE_WITH_SPACE,"Replace with space").addOption(d.REPLACE_WITH_DASH,"Replace with dash (-)").addOption(d.REPLACE_WITH_UNDERSCORE,"Replace with underscore (_)").addOption(d.CUSTOM,"Custom replacement").setValue(this.plugin.settings.illegalCharHandling).onChange(async s=>{this.plugin.settings.illegalCharHandling=s,s===d.CUSTOM?e.settingEl.style.display="block":e.settingEl.style.display="none",await this.plugin.saveSettings()}));let e=new T.Setting(t).setName("Custom replacement character").setDesc("Specify a custom character to replace illegal characters with").addText(n=>n.setValue(this.plugin.settings.customReplacement).onChange(async s=>{this.plugin.settings.customReplacement=s,await this.plugin.saveSettings()}));this.plugin.settings.illegalCharHandling!==d.CUSTOM&&(e.settingEl.style.display="none"),new T.Setting(t).setName("Update all titles with sanitized version").setDesc("When updating from frontmatter or heading to filename, also update the source with the sanitized version (without illegal characters)").addToggle(n=>n.setValue(this.plugin.settings.updateOtherTitlesWithSanitizedVersion).onChange(async s=>{this.plugin.settings.updateOtherTitlesWithSanitizedVersion=s,await this.plugin.saveSettings()}))}};var R=class extends o.Plugin{async onload(){await this.loadSettings(),this.addSettingTab(new M(this.app,this)),this.addCommand({id:"sync-titles-default",name:"Sync titles using default source",checkCallback:t=>this.app.workspace.getActiveFile()?(t||this.syncTitlesWithDefault(),!0):!1}),this.addCommand({id:"sync-titles-from-filename",name:"Sync titles using filename as source",checkCallback:t=>this.app.workspace.getActiveFile()?(t||this.syncTitles(h.FILENAME),!0):!1}),this.addCommand({id:"sync-titles-from-frontmatter",name:"Sync titles using frontmatter as source",checkCallback:t=>this.app.workspace.getActiveFile()?(t||this.syncTitles(h.FRONTMATTER),!0):!1}),this.addCommand({id:"sync-titles-from-heading",name:"Sync titles using first heading as source",checkCallback:t=>this.app.workspace.getActiveFile()?(t||this.syncTitles(h.HEADING),!0):!1})}onunload(){}async loadSettings(){this.settings=Object.assign({},H,await this.loadData())}async saveSettings(){await this.saveData(this.settings)}syncTitlesWithDefault(){this.syncTitles(this.settings.defaultTitleSource)}async syncTitles(t){let e=this.app.workspace.getActiveFile();if(!e){new o.Notice("No active file");return}try{if(await this.areTitlesToSyncAlreadySynchronized(e)){new o.Notice("All titles that should be synced are already synchronized");return}switch(t){case h.FILENAME:await this.syncFromFilename(e);break;case h.FRONTMATTER:await this.syncFromFrontmatter(e);break;case h.HEADING:await this.syncFromHeading(e);break}new o.Notice("Titles synchronized successfully")}catch(n){new o.Notice(`Error synchronizing titles: ${n.message}`),console.error("Error synchronizing titles:",n)}}async areTitlesToSyncAlreadySynchronized(t){var u,p;let e=t.basename,n=(u=this.app.metadataCache.getFileCache(t))==null?void 0:u.frontmatter,s=n==null?void 0:n.title,a=(p=this.app.metadataCache.getFileCache(t))==null?void 0:p.headings,i=a==null?void 0:a.find(A=>A.level===1),c=i==null?void 0:i.heading;switch(this.settings.syncMode){case l.ALL:return!s||!c?!1:e===s&&s===c;case l.FILENAME_FRONTMATTER:return s?e===s:!1;case l.FILENAME_HEADING:return c?e===c:!1;case l.FRONTMATTER_HEADING:return!s||!c?!1:s===c;default:return!1}}async syncFromFilename(t){let e=t.basename;await this.updateTitlesBasedOnSyncMode(t,e)}async syncFromFrontmatter(t){var a;let e=(a=this.app.metadataCache.getFileCache(t))==null?void 0:a.frontmatter;if(!e||!e.title)throw new Error("No title found in frontmatter");let n=e.title,s=this.sanitizeFilename(n);if(s!==n)if(this.settings.updateOtherTitlesWithSanitizedVersion)new o.Notice(`Title contains illegal characters. All titles will be updated with the sanitized version: "${s}"`),await this.updateTitlesBasedOnSyncMode(t,s);else{new o.Notice(`Title contains illegal characters. Filename will be sanitized to: "${s}"`);let i=this.settings.syncMode!==l.FRONTMATTER_HEADING,c=this.shouldSyncFrontmatter(),u=this.shouldSyncHeading();i&&await this.updateFilename(t,s),(c||u)&&await this.updateFrontmatterAndOrHeading(t,n)}else await this.updateTitlesBasedOnSyncMode(t,n)}async syncFromHeading(t){var c;let e=(c=this.app.metadataCache.getFileCache(t))==null?void 0:c.headings,n=e==null?void 0:e.find(u=>u.level===1),s=n==null?void 0:n.heading;if(!s)throw new Error("No level 1 heading found in the file. Please add a level 1 heading or use another source for synchronization.");let a=s,i=this.sanitizeFilename(a);if(i!==a)if(this.settings.updateOtherTitlesWithSanitizedVersion)new o.Notice(`Title contains illegal characters. All titles will be updated with the sanitized version: "${i}"`),await this.updateTitlesBasedOnSyncMode(t,i);else{new o.Notice(`Title contains illegal characters. Filename will be sanitized to: "${i}"`);let u=this.settings.syncMode!==l.FRONTMATTER_HEADING,p=this.shouldSyncFrontmatter(),A=this.shouldSyncHeading();u&&await this.updateFilename(t,i),(p||A)&&await this.updateFrontmatterAndOrHeading(t,a)}else await this.updateTitlesBasedOnSyncMode(t,a)}sanitizeFilename(t){let e=/[\/\\:*?"<>|#^[\]]/g;if(!e.test(t))return t;switch(this.settings.illegalCharHandling){case d.REMOVE:return t.replace(e,"");case d.REPLACE_WITH_SPACE:return t.replace(e," ");case d.REPLACE_WITH_DASH:return t.replace(e,"-");case d.REPLACE_WITH_UNDERSCORE:return t.replace(e,"_");case d.CUSTOM:{let n=this.settings.customReplacement||"";return t.replace(e,n)}default:return t.replace(e,"")}}shouldSyncFilename(){return this.settings.syncMode!==l.FRONTMATTER_HEADING}shouldSyncFrontmatter(){return this.settings.syncMode!==l.FILENAME_HEADING}shouldSyncHeading(){return this.settings.syncMode!==l.FILENAME_FRONTMATTER}async updateTitlesBasedOnSyncMode(t,e){let n=this.shouldSyncFilename(),s=this.shouldSyncFrontmatter(),a=this.shouldSyncHeading();n&&await this.updateFilename(t,e),(s||a)&&await this.updateFrontmatterAndOrHeading(t,e)}async updateFilename(t,e){var n;t.basename!==e&&await this.app.fileManager.renameFile(t,`${((n=t.parent)==null?void 0:n.path)?t.parent.path+"/":""}${e}${t.extension?"."+t.extension:""}`)}async updateFrontmatterAndOrHeading(t,e){await this.app.vault.process(t,n=>this.updateFileContents(n,e,t,this.shouldSyncFrontmatter(),this.shouldSyncHeading()))}async updateFrontmatterAndHeading(t,e){await this.updateFrontmatterAndOrHeading(t,e)}findFirstHeadingPosition(t,e){let n={hasHeading:!1,position:-1,text:""},s=this.app.metadataCache.getFileCache(e);if(!s||!s.headings)return n;let a=s.headings.find(c=>c.level===1);if(!a)return n;n.hasHeading=!0,n.text=a.heading;let i=`# ${a.heading}`;return n.position=t.indexOf(i),n}updateFileContents(t,e,n,s=!0,a=!0){let i=t,c=this.findFirstHeadingPosition(i,n),u=c.hasHeading,p=c.position,A=c.text,f=(0,o.getFrontMatterInfo)(i),b=f.exists;if(s)if(b){let m=f.frontmatter;try{let F=(0,o.parseYaml)(m)||{};F.title=e;let E=(0,o.stringifyYaml)(F);i=i.substring(0,f.from)+E+i.substring(f.to)}catch(F){console.error("Error parsing frontmatter:",F);let E=/^title:\s*(.*)$/m;if(m.match(E)){let g=m.replace(E,`title: ${e}`);i=i.substring(0,f.from)+g+i.substring(f.to)}else{let g=`title: ${e}
${m}`;i=i.substring(0,f.from)+g+i.substring(f.to)}}}else{let F=(0,o.stringifyYaml)({title:e});u&&p>=0?i=`---
${F}---

`+i.substring(0,p).trim()+(p>0?`

`:"")+i.substring(p):i=`---
${F}---

`+i}if(a){let m=(0,o.getFrontMatterInfo)(i),F=m.exists,E=/^#\s+(.+)$/m,S=i.match(E);if(S){let g=S[0],y=i.indexOf(g);i=i.substring(0,y)+`# ${e}`+i.substring(y+g.length)}else if(F){let g=m.contentStart,y=i.substring(g).trim();y.length>0?i=i.substring(0,g)+`
# ${e}

`+y:i=i.substring(0,g)+`
# ${e}`;let O=m.to,_=i.substring(O);i=i.substring(0,O)+`

`+_.trimStart()}else{let g=i.trim();g.length>0?i=`# ${e}

${g}`:i=`# ${e}`}}return i}};0&&(module.exports={});
